{"version":3,"sources":["views/dashboard/survey/generalSurvey.js"],"names":["CustomToolbar","printOptions","disableToolbarButton","GeneralSurvey","useState","rows","setUsers","useEffect","axios","post","then","response","console","log","data","status","recs","columns","field","headerName","width","sortable","renderCell","params","className","style","height","pageSize","components","Toolbar","getRowId","_id"],"mappings":"mOAKA,SAASA,IACP,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAmBC,aAAc,CAAEC,sBAAsB,KAEzD,kBAAC,IAAD,OA6ESC,UAxEf,WAA0B,IAAD,EACEC,mBAAS,IADX,mBAChBC,EADgB,KACVC,EADU,KAEvBC,qBAAU,WACRC,IAAMC,KAAK,kEACXC,MAAK,SAAAC,GAEJ,GADAC,QAAQC,IAAI,kBACc,IAAvBF,EAASG,KAAKC,OACf,CACC,IAAIC,EAAKL,EAASG,KAAKA,KAAKA,KAC5BR,EAASU,MAEZ,OAGH,IAAMC,EAAU,CACd,CAAEC,MAAO,oBAAqBC,WAAY,sBAAuBC,MAAO,IACxE,CAAEF,MAAO,WAAYC,WAAY,mBAAoBC,MAAO,KAC5D,CAAEF,MAAO,UAAWC,WAAY,MAAOC,MAAO,KAC9C,CAAEF,MAAO,iBAAkBC,WAAY,oBAAqBC,MAAO,KACnE,CAAEF,MAAO,mBAAoBC,WAAY,sBAAuBC,MAAO,KACvE,CAAEF,MAAO,oBAAqBC,WAAY,uBAAwBC,MAAO,KACzE,CACEF,MAAO,sBACPC,WAAY,yBACZE,UAAU,EACVD,MAAO,IACPE,WAAY,SAACC,OAoBjB,OACE,oCACA,yBAAKC,UAAU,cACb,yBAAKA,UAAU,aACb,wBAAIA,UAAU,sFAAd,kBAGA,yBAAKC,MAAO,CAAEC,OAAQ,OAAQN,MAAO,SAEnC,kBAAC,IAAD,CACEI,UAAU,OACVnB,KAAMA,EACNY,QAASA,EACTU,SAAU,EACVC,WAAY,CACVC,QAAS7B,GAEX8B,SAAU,SAACzB,GAAD,OAAUA,EAAK0B","file":"static/js/86.a8394b67.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\r\n// import { environment } from '../../api'\r\nimport '@mui/x-data-grid-generator'\r\nimport { DataGrid, GridToolbar,GridToolbarContainer,GridFilterPanel,GridToolbarExport,GridToolbarFilterButton } from '@mui/x-data-grid'\r\nimport axios from \"axios\";\r\nfunction CustomToolbar() {\r\n  return (\r\n    <GridToolbarContainer>\r\n      <GridToolbarExport printOptions={{ disableToolbarButton: true }} />\r\n      {/* <GridFilterPanel /> */}\r\n      <GridToolbarFilterButton />\r\n    </GridToolbarContainer>\r\n  );\r\n}\r\n\r\nfunction GeneralSurvey() {\r\n  const [rows, setUsers] = useState([])\r\n  useEffect(() => {\r\n\t\t  axios.post('http://159.65.148.197:3001/api/generalsurvey/GeneralSurveyList')\r\n\t\t .then(response => {\r\n\t\t\t\t\tconsole.log(\"Returned data:\");\r\n\t\t\t\t\tif(response.data.status===1)\r\n\t\t\t\t\t  {\r\n\t\t\t\t\t\t  var recs=response.data.data.data;\r\n\t\t\t\t\t\t  setUsers(recs);\r\n\t\t\t\t\t  }\r\n\t\t },[]);\r\n })\r\n\r\n  const columns = [\r\n    { field: 'noOfFamilyMembers', headerName: 'No.of Family Member', width: 60 },\r\n    { field: 'nameHead', headerName: 'Family Head Name', width: 150 },\r\n    { field: 'ageHead', headerName: 'Age', width: 150 },\r\n    { field: 'NoOfAdultMales', headerName: 'No.of Adult Males', width: 120 },\r\n    { field: 'NoOfAdultFemales', headerName: 'No.of Adult Females', width: 150 },\r\n    { field: 'NoOfChildrenMales', headerName: 'No.of Children Males', width: 300 },\r\n    {\r\n      field: 'NoOfChildrenFemales',\r\n      headerName: 'No.of Children Females',\r\n      sortable: false,\r\n      width: 100,\r\n      renderCell: (params) => {\r\n        const onClick = (e) => {\r\n          e.stopPropagation() // don't select this row after clicking\r\n\r\n          const api = params.api\r\n          const thisRow = {}\r\n          api\r\n            .getAllColumns()\r\n            .filter((c) => c.field !== '__check__' && !!c)\r\n            .forEach(\r\n              (c) => (thisRow[c.field] = params.getValue(params.id, c.field)),\r\n            )\r\n\r\n          return alert(JSON.stringify(thisRow, null, 4))\r\n        }\r\n      \r\n      },\r\n    },\r\n  ]\r\n\r\n  return (\r\n    <>\r\n    <div className=\"bannermain\">\r\n      <div className=\"container\">\r\n        <h2 className=\"font-24-31 font-20-26 font-style-normal font-weight-600 colorformhrading titlewadd\">\r\n        General Survey\r\n        </h2>\r\n        <div style={{ height: '75vh', width: '100%' }}>\r\n         \r\n          <DataGrid\r\n            className=\"pb-3\"\r\n            rows={rows}\r\n            columns={columns}\r\n            pageSize={8}\r\n            components={{\r\n              Toolbar: CustomToolbar,\r\n            }}\r\n            getRowId={(rows) => rows._id}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </>\r\n  )\r\n}\r\n\r\nexport default GeneralSurvey"],"sourceRoot":""}