{"version":3,"sources":["views/dashboard/ngo/UnmappedSevika.js"],"names":["CustomHeader","props","className","value","placeholder","onChange","e","handleFilter","size","JTable","state","txscreenerId","handleSubmit","preventDefault","alert","target","data","filteredData","setState","length","filter","item","startsWithCondition","message","toLowerCase","startsWith","mobile","email","revenue","status","includesCondition","name","includes","date","columns","selector","sortable","cell","row","firstName","lastName","alt","onClick","handleClick","screenerId","recs","loadRecs","bind","this","console","log","window","confirm","postData","axios","method","url","headers","then","res","location","reload","catch","mounted","post","token","issubscreener","ismapped","response","noHeader","pagination","subHeader","subHeaderComponent","React","Component"],"mappings":"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","file":"static/js/73.18a80341.chunk.js","sourcesContent":["\nimport React from \"react\"\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  CardTitle,\n  Badge,\n  Input,\n  Button,FormGroup, Form\n} from \"reactstrap\"\nimport DataTable from \"react-data-table-component\"\nimport { Star, Search,Icon } from \"react-feather\"\nimport axios from \"axios\";\nconst CustomHeader = props => {\n  return (\n    <div className=\"d-flex flex-wrap justify-content-between\">\n      <div className=\"add-new\">\n        \n      </div>\n      <div className=\"position-relative has-icon-left mb-1\">\n        <Input value={props.value} placeholder=\"search\" onChange={e => props.handleFilter(e)} />\n        <div className=\"form-control-position\">\n          <Search size=\"15\" />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nclass JTable extends React.Component {\n constructor(props) {\n    super(props);\t\n  this.state = {\n    columns: [\n    //   {\n    //     name: \"Screener ID\",\n    //     selector: \"screenerid\",\n    //     sortable: true,\n    //     minWidth: \"200px\",\n    //     cell: row => (\n    //       <div className=\"d-flex flex-xl-row flex-column align-items-xl-center align-items-start py-xl-0 py-1\">\n            \n    //         <div className=\"user-info text-truncate ml-xl-50 ml-0\">\n    //           <span\n    //             title={row.screenerId}\n    //             className=\"d-block text-bold-500 text-truncate mb-0\">\n    //             {row.screenerId}\n    //           </span>\n              \n    //         </div>\n    //       </div>\n    //     )\n    //   },\n      {\n        name: \"Name\",\n        selector: \"name\",\n        sortable: true,\n        cell: row => (\n          <p className=\"text-bold-500 text-truncate mb-0\">{row.firstName} &nbsp;{row.lastName}</p>\n        )\n      },\n      {\n        name: \"Mobile No\",\n        selector: \"mobile\",\n        sortable: true,\n        cell: row => (\n          <p className=\"text-bold-500 text-truncate mb-0\">{row.mobile}</p>\n        )\n      },\n      {\n        name: \"Email\",\n        selector: \"email\",\n        sortable: true,\n        cell: row => (\n          <p className=\"text-bold-500 text-truncate mb-0\">{row.email}</p>\n        )\n      },           \n      // {\n      //   name: \"onBoarding.Date\",\n      //   selector: \"boradingDate\",\n      //   sortable: true,\n      //   cell: row => (\n      //     <p className=\"text-bold-500 text-truncate mb-0\">{row.info.dateOfOnBoarding}</p>\n      //   )\n      // },\n      // {\n      //   name: \"Address\",\n      //   selector: \"address\",\n      //   sortable: true,\n      //   cell: row => (\n      //     <div className=\"d-flex flex-xl-row flex-column align-items-xl-center align-items-start py-xl-0 py-1\">\n            \n      //       <div className=\"user-info text-truncate ml-xl-50 ml-0\">\n      //         <span\n      //           title={row.info.address}\n      //           className=\"d-block text-bold-500 text-truncate mb-0\">\n      //           {row.info.address}\n      //         </span>\n\t\t\t//         <small title={row.info.district}>{row.info.district},</small>\n      //         <small title={row.state}>{row.info.state}</small>\n      //       </div>\n      //     </div>\n      //   )\n      // },\n      {\n        name: \"Action\",\n        selector: \"\",\n        sortable: true,\n        cell: row =>(\n          <button\n          // src={activateImg}\n          alt=\"porfileImg\"\n          onClick={() =>this.handleClick(row.screenerId)}\n          // style={{width:\"30px\",cursor:\"pointer\"}}\n          className=\"btn-success\"\n        >Mapped</button>\n         \n          \n        )\n      }\n    ],\n    data: [],\n    filteredData: [],\n    value: \"\",\n\trecs:[]\n  }\n  this.loadRecs = this.loadRecs.bind(this);\n} // cosntructor\n\n// handleClick(scrid) {\n \n//   localStorage.setItem(\"Scrid\",scrid)  \n//   document.location='../../views/dashboard/ngoscreenerprofile'\n//   //this.props.onHeaderClick(this.props.value);\n// }\n\n\nloadRecs(recs)\n {\n\t \n\t this.setState({data:recs});\n\t console.log(this.state.recs);\n }\n  \n handleClick(screenerId) {\n\n  if(window.confirm(\"Are you sure want to Deactivate User !\")){\n  let postData=\"screenerId=\"+screenerId+\"&ismapped=1&token=dfjkhsdfaksjfh3756237\"; \n  \n  let _targetPostURL=\"http://159.65.148.197:3001/api/ngo/updatescreenermap?=\";\n  axios(\n    {\n      method: 'post',\n      url: _targetPostURL,\n      data: postData,\n      headers: {'Content-Type': 'application/x-www-form-urlencoded' }\n      }\n\n  ).then(res=>{\n    if(res.data.status===1){\n      //alert(\"Updated Successfully\")\n      window.location.reload();\n\n    }\n                              \n\n  })\n  .catch(e=>{\n    console.log(\"Exception:\"); \n    console.log(e);\n  });\n}\n  //alert(_userid)\n  //localStorage.setItem(\"Sid\",scrid)\n  //document.location='/views/dashboard/screener/profile'\n  //this.props.onHeaderClick(this.props.value);\n}\n\ncomponentWillUnmount(){ console.log(\"WIllUnmount************\"); this.mounted = false;}\ncomponentDidMount() {console.log(\"DID MOUNT ************\");\n\t\tthis.mounted = true;\n\t\t//this.setState({data:null});\n        \n\t\t//axios.post('http://159.65.148.197:3001/api/ngo/screenerList', { userId: '4632746328',ngoId:'0',token:'dfjkhsdfaksjfh3756237' })\n    axios.post('http://159.65.148.197:3001/api/ngo/sevikaunmappedlist', {token:'dfjkhsdfaksjfh3756237',issubscreener:1,ismapped:false})\n\t\t .then(response => {\n\t\t\t\t\tconsole.log(\"Returned data:\", response.data.status);\n\t\t\t\t\tif(response.data.status===1)\n\t\t\t\t\t  {\n\t\t\t\t\t\t  var msg=response.data.message;\n\t\t\t\t\t\t  var recs=response.data.data.data;\n\t\t\t\t\t\t  console.log(recs[0]);\n\t\t\t\t\t\t  this.loadRecs(recs);\n\t\t\t\t\t  }\n\t\t });// then\n}\nstate = {\n    txscreenerId: \"\"\n   \n  }\n\nhandleSubmit = e => {\n    e.preventDefault()\n    alert(this.state.txscreenerId)\n}\n\n\n  handleFilter = e => {\n    let value = e.target.value\n    let data = this.state.data\n    let filteredData = this.state.filteredData\n    this.setState({ value })\n\n    if (value.length) {\n      filteredData = data.filter(item => {\n        let startsWithCondition =\n        \n          item.message.toLowerCase().startsWith(value.toLowerCase()) ||\n          item.mobile.toLowerCase().startsWith(value.toLowerCase()) ||\n          item.email.toLowerCase().startsWith(value.toLowerCase()) ||\n          item.revenue.toLowerCase().startsWith(value.toLowerCase()) ||\n          item.status.toLowerCase().startsWith(value.toLowerCase())\n        let includesCondition =\n          item.name.toLowerCase().includes(value.toLowerCase()) ||\n          item.date.toLowerCase().includes(value.toLowerCase()) ||\n          item.email.toLowerCase().includes(value.toLowerCase()) ||\n          item.revenue.toLowerCase().includes(value.toLowerCase()) ||\n          item.status.toLowerCase().includes(value.toLowerCase())\n\n        if (startsWithCondition) {\n          return startsWithCondition\n        } else if (!startsWithCondition && includesCondition) {\n          return includesCondition\n        } else return null\n      })\n      this.setState({ filteredData })\n    }\n  }\n\n  /* render for all */\n  render() {\n    let { data, columns, value, filteredData } = this.state\n    return (\n      <Card>\n        <CardHeader>\n          <CardTitle>Unmapped Sevika List</CardTitle>\n        </CardHeader>\n        <CardBody className=\"rdt_Wrapper\">\n          <DataTable\n            className=\"dataTable-custom\"\n            data={value.length ? filteredData : data}\n            columns={columns}\n            noHeader\n            pagination\n            subHeader\n            subHeaderComponent={\n              <CustomHeader value={value} handleFilter={this.handleFilter} />\n            }\n          />\n        </CardBody>\n      </Card>\n    )\n  }\n  /* ENd rebder */\n}\n\nexport default JTable\n"],"sourceRoot":""}