{"version":3,"sources":["views/dashboard/admin/ScreenerList.js","assets/img/icons/viewprofile.png"],"names":["CustomHeader","props","className","value","placeholder","onChange","e","handleFilter","size","JTable","target","data","state","filteredData","setState","length","filter","item","startsWithCondition","firstName","toLowerCase","startsWith","lastName","includesCondition","includes","columns","name","selector","sortable","minWidth","cell","row","title","screenerId","mobile","email","info","qualification","dateOfOnBoarding","src","profileImg","alt","onClick","handleClick","screenerLoginId","style","width","cursor","recs","loadRecs","bind","this","console","log","_userid","localStorage","setItem","window","location","mounted","axios","post","userId","getItem","ngoId","token","then","response","status","message","removeItem","Ripple","color","type","handleBack","noHeader","pagination","subHeader","subHeaderComponent","React","Component","module","exports"],"mappings":"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","file":"static/js/52.6c466ffd.chunk.js","sourcesContent":["import React from \"react\"\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  CardTitle,\n  Badge,\n  Input,\n  Button\n} from \"reactstrap\"\nimport DataTable from \"react-data-table-component\"\nimport { Star, Search } from \"react-feather\"\nimport axios from \"axios\";\nimport profileImg from \"../../../assets/img/icons/viewprofile.png\"\nconst CustomHeader = props => {\n  return (\n    <div className=\"d-flex flex-wrap justify-content-between\">\n      <div className=\"add-new\">\n        \n      </div>\n      <div className=\"position-relative has-icon-left mb-1\">\n        <Input value={props.value} placeholder=\"search\" onChange={e => props.handleFilter(e)} />\n        <div className=\"form-control-position\">\n          <Search size=\"15\" />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nclass JTable extends React.Component {\n constructor(props) {\n    super(props);\t\n  this.state = {\n    columns: [\n      {\n        name: \"Screener ID\",\n        selector: \"screenerid\",\n        sortable: true,\n        minWidth: \"200px\",\n        cell: row => (\n          <div className=\"d-flex flex-xl-row flex-column align-items-xl-center align-items-start py-xl-0 py-1\">\n            \n            <div className=\"user-info text-truncate ml-xl-50 ml-0\">\n              <span\n                title={row.screenerId}\n                className=\"d-block text-bold-500 text-truncate mb-0\">\n                {row.screenerId}\n              </span>\n              \n            </div>\n          </div>\n        )\n      },\n      {\n        name: \"Name\",\n        selector: \"name\",\n        sortable: true,\n        cell: row => (\n          <p className=\"text-bold-500 text-truncate mb-0\">{row.firstName} &nbsp;{row.lastName}</p>\n        )\n      },\n      {\n        name: \"Mobile No\",\n        selector: \"mobile\",\n        sortable: true,\n        cell: row => (\n          <p className=\"text-bold-500 text-truncate mb-0\">{row.mobile}</p>\n        )\n      },\n      {\n        name: \"Email\",\n        selector: \"email\",\n        sortable: true,\n        cell: row => (\n          <p className=\"text-bold-500 mb-0\">{row.email}</p>\n        )\n      },\n     \n      {\n        name: \"Qualification\",\n        selector: \"qualification\",\n        sortable: true,\n        cell: row => (\n          <p className=\"text-bold-500 text-truncate mb-0\">{row.info.qualification}</p>\n        )\n      },\n      {\n        name: \"onBoarding.Date\",\n        selector: \"boradingDate\",\n        sortable: true,\n        cell: row => (\n          <p className=\"text-bold-500 mb-0\">{row.info.dateOfOnBoarding}</p>\n        )\n      },\n      ,    \n      {\n        name: \"Action\",\n        selector: \"\",\n        sortable: true,\n        cell: row => (\n          <div>\n          <img\n          src={profileImg}\n          alt=\"porfileImg\"\n          onClick={() =>this.handleClick(row.screenerLoginId)}\n          style={{width:\"30px\",cursor:\"pointer\"}}\n          className=\"img-fluid img-border rounded-circle box-shadow-1\"\n        />\n        \n      </div>\n        )\n      }\n    ],\n    data: [],\n    filteredData: [],\n    value: \"\",\n\trecs:[]\n  }\n  this.loadRecs = this.loadRecs.bind(this);\n} // cosntructor\nloadRecs(recs)\n {\n\t \n\t this.setState({data:recs});\n\t console.log(this.state.recs);\n }\n\n handleClick(_userid) {    \n  localStorage.setItem(\"Scrid\",_userid);\n  window.location='../../views/dashboard/screenerprofile'  \n}\n\n handleBack() {    \n  window.location='../../views/dashboard/ngolist'\n}\n  \ncomponentWillUnmount(){ console.log(\"WIllUnmount************\"); this.mounted = false;}\ncomponentDidMount() {console.log(\"DID MOUNT ************\");\n\t\tthis.mounted = true;\n\t\t//this.setState({data:null});\n        \n\t\taxios.post('http://159.65.148.197:3001/api/ngo/screenerList', {userId:localStorage.getItem(\"userid\"),ngoId:localStorage.getItem(\"Ngoid\"),token:'dfjkhsdfaksjfh3756237' })\n\t\t .then(response => {\n\t\t\t\t\tconsole.log(\"Returned data:\", response.data.status);\n\t\t\t\t\tif(response.data.status===1)\n\t\t\t\t\t  {\n\t\t\t\t\t\t  var msg=response.data.message;\n\t\t\t\t\t\t  var recs=response.data.data.data;\n\t\t\t\t\t\t  console.log(recs[0]);\n\t\t\t\t\t\t  this.loadRecs(recs);\n              localStorage.removeItem(\"Ngoid\")\n\t\t\t\t\t  }\n\t\t });// then\n}\n\n  handleFilter = e => {\n    let value = e.target.value\n    let data = this.state.data\n    let filteredData = this.state.filteredData\n    this.setState({ value })\n\n    if (value.length) {\n      filteredData = data.filter(item => {\n        let startsWithCondition =\n        \n          item.firstName.toLowerCase().startsWith(value.toLowerCase()) ||\n          item.lastName.toLowerCase().startsWith(value.toLowerCase()) \n        \n        let includesCondition =\n          item.firstName.toLowerCase().includes(value.toLowerCase()) ||\n          item.lastName.toLowerCase().includes(value.toLowerCase()) \n         \n\n        if (startsWithCondition) {\n          return startsWithCondition\n        } else if (!startsWithCondition && includesCondition) {\n          return includesCondition\n        } else return null\n      })\n      this.setState({ filteredData })\n    }\n  }\n\n  /* render for all */\n  render() {\n    let { data, columns, value, filteredData } = this.state\n    return (\n      <Card>\n        <CardHeader>\n          <CardTitle>Mapped Screener List  <Button.Ripple\n                    color=\"primary\"\n                    type=\"submit\"\n                    className=\"mr-1 mb-1\"\n                    onClick={this.handleBack}\n                  >\n                   Back\n                  </Button.Ripple></CardTitle>\n        </CardHeader>\n        <CardBody className=\"rdt_Wrapper\">\n          <DataTable\n            className=\"dataTable-custom\"\n            data={value.length ? filteredData : data}\n            columns={columns}\n            noHeader\n            pagination\n            subHeader\n            subHeaderComponent={\n              <CustomHeader value={value} handleFilter={this.handleFilter} />\n            }\n          />\n        </CardBody>\n      </Card>\n    )\n  }\n  /* ENd rebder */\n}\n\nexport default JTable\n","module.exports = __webpack_public_path__ + \"static/media/viewprofile.08133088.png\";"],"sourceRoot":""}