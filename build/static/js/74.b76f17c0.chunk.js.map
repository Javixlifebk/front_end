{"version":3,"sources":["views/dashboard/ngo/mappedDoctor.js"],"names":["CustomHeader","props","className","value","placeholder","onChange","e","handleFilter","size","JTable","target","data","state","filteredData","setState","length","filter","item","startsWithCondition","message","toLowerCase","startsWith","mobile","email","revenue","status","includesCondition","name","includes","date","columns","selector","sortable","minWidth","cell","row","title","doctorId","firstName","lastName","createdAt","alt","onClick","handleClick","recs","loadRecs","bind","this","console","log","window","confirm","postData","axios","method","url","headers","then","res","location","reload","catch","mounted","post","token","ismapped","response","noHeader","pagination","subHeader","subHeaderComponent","React","Component"],"mappings":"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","file":"static/js/74.b76f17c0.chunk.js","sourcesContent":["import React from \"react\"\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardTitle,\r\n  Badge,\r\n  Input,\r\n  Button\r\n} from \"reactstrap\"\r\nimport DataTable from \"react-data-table-component\"\r\nimport { Star, Search } from \"react-feather\"\r\nimport axios from \"axios\";\r\nconst CustomHeader = props => {\r\n  return (\r\n    <div className=\"d-flex flex-wrap justify-content-between\">\r\n      <div className=\"add-new\">\r\n        \r\n      </div>\r\n      <div className=\"position-relative has-icon-left mb-1\">\r\n        <Input value={props.value} placeholder=\"search\" onChange={e => props.handleFilter(e)} />\r\n        <div className=\"form-control-position\">\r\n          <Search size=\"15\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nclass JTable extends React.Component {\r\n constructor(props) {\r\n    super(props);\t\r\n  this.state = {\r\n    columns: [\r\n      {\r\n        name: \"Doctor ID\",\r\n        selector: \"doctorId\",\r\n        sortable: true,\r\n        minWidth: \"200px\",\r\n        cell: row => (\r\n          <div className=\"d-flex flex-xl-row flex-column align-items-xl-center align-items-start py-xl-0 py-1\">\r\n            \r\n            <div className=\"user-info text-truncate ml-xl-50 ml-0\">\r\n              <span\r\n                title={row.doctorId}\r\n                className=\"d-block text-bold-500 text-truncate mb-0\">\r\n                {row.doctorId}\r\n              </span>\r\n              \r\n            </div>\r\n          </div>\r\n        )\r\n      },\r\n      {\r\n        name: \"Name\",\r\n        selector: \"name\",\r\n        sortable: true,\r\n        cell: row => (\r\n          <p className=\"text-bold-500 text-truncate mb-0\">{row.firstName} &nbsp;{row.lastName}</p>\r\n        )\r\n      },\r\n      {\r\n        name: \"Mobile No\",\r\n        selector: \"mobile\",\r\n        sortable: true,\r\n        cell: row => (\r\n          <p className=\"text-bold-500 text-truncate mb-0\">{row.mobile}</p>\r\n        )\r\n      },\r\n      {\r\n        name: \"Email\",\r\n        selector: \"email\",\r\n        sortable: true,\r\n        cell: row => (\r\n          <p className=\"text-bold-500 text-truncate mb-0\">{row.email}</p>\r\n        )\r\n      },\r\n      {\r\n        name: \"Created Date\",\r\n        selector: \"createdAt\",\r\n        sortable: true,\r\n        cell: row => (\r\n          <p className=\"text-bold-500 text-truncate mb-0\">{row.createdAt}</p>\r\n        )\r\n      },\r\n      {\r\n        name: \"Action\",\r\n        selector: \"\",\r\n        sortable: true,\r\n        cell: row =>(\r\n          <button\r\n          // src={activateImg}\r\n          alt=\"porfileImg\"\r\n          onClick={() =>this.handleClick(row.doctorId)}\r\n          // style={{width:\"30px\",cursor:\"pointer\"}}\r\n          className=\"btn-success\"\r\n        >Unmapped</button>\r\n         \r\n          \r\n        )\r\n      }\r\n    \r\n      // {\r\n      //   name: \"On Boarding Date\",\r\n      //   selector: \"boradingDate\",\r\n      //   sortable: true,\r\n      //   cell: row => (\r\n      //     <p className=\"text-bold-500 text-truncate mb-0\">{row.info.dateOfOnBoarding}</p>\r\n      //   )\r\n      // },\r\n      // {\r\n      //   name: \"Address\",\r\n      //   selector: \"address\",\r\n      //   sortable: true,\r\n      //   cell: row => (\r\n      //     <div className=\"d-flex flex-xl-row flex-column align-items-xl-center align-items-start py-xl-0 py-1\">\r\n            \r\n      //       <div className=\"user-info text-truncate ml-xl-50 ml-0\">\r\n      //         {/* <span\r\n      //           title={row.info.address}\r\n      //           className=\"d-block text-bold-500 text-truncate mb-0\">\r\n      //           {row.info.address}\r\n      //         </span> */}\r\n\t\t\t//   {/* <small title={row.info.district}>{row.info.district},</small> */}\r\n      //         <small title={row.state}>{row.info.state}</small>\r\n      //       </div>\r\n      //     </div>\r\n      //   )\r\n      // }\r\n    ],\r\n    data: [],\r\n    filteredData: [],\r\n    value: \"\",\r\n\trecs:[]\r\n  }\r\n  this.loadRecs = this.loadRecs.bind(this);\r\n} // cosntructor\r\nloadRecs(recs)\r\n {\r\n\t \r\n\t this.setState({data:recs});\r\n\t console.log(this.state.recs);\r\n }\r\n handleClick(doctorId) {\r\n\r\n  if(window.confirm(\"Are you sure want to Deactivate User !\")){\r\n  let postData=\"doctorId=\"+doctorId+\"&ismapped=0&token=dfjkhsdfaksjfh3756237\"; \r\n  \r\n  let _targetPostURL=\"http://159.65.148.197:3001/api/doctor/updatemapped?=\";\r\n  axios(\r\n    {\r\n      method: 'post',\r\n      url: _targetPostURL,\r\n      data: postData,\r\n      headers: {'Content-Type': 'application/x-www-form-urlencoded' }\r\n      }\r\n\r\n  ).then(res=>{\r\n    if(res.data.status===1){\r\n      //alert(\"Updated Successfully\")\r\n      window.location.reload();\r\n\r\n    }\r\n                              \r\n\r\n  })\r\n  .catch(e=>{\r\n    console.log(\"Exception:\"); \r\n    console.log(e);\r\n  });\r\n}\r\n  //alert(_userid)\r\n  //localStorage.setItem(\"Sid\",scrid)\r\n  //document.location='/views/dashboard/screener/profile'\r\n  //this.props.onHeaderClick(this.props.value);\r\n}\r\n  \r\ncomponentWillUnmount(){ console.log(\"WIllUnmount************\"); this.mounted = false;}\r\ncomponentDidMount() {console.log(\"DID MOUNT ************\");\r\n\t\tthis.mounted = true;\r\n\t\t//this.setState({data:null});\r\n        \r\n\t\taxios.post('http://159.65.148.197:3001/api/doctor/mappedList', { token:'dfjkhsdfaksjfh3756237',ismapped:true })\r\n\t\t .then(response => {\r\n\t\t\t\t\tconsole.log(\"Returned data:\", response.data.status);\r\n\t\t\t\t\tif(response.data.status===1)\r\n\t\t\t\t\t  {\r\n\t\t\t\t\t\t  var msg=response.data.message;\r\n\t\t\t\t\t\t  var recs=response.data.data.data;\r\n\t\t\t\t\t\t  console.log(recs[0]);\r\n\t\t\t\t\t\t  this.loadRecs(recs);\r\n\t\t\t\t\t  }\r\n\t\t });// then\r\n}\r\n\r\n  handleFilter = e => {\r\n    let value = e.target.value\r\n    let data = this.state.data\r\n    let filteredData = this.state.filteredData\r\n    this.setState({ value })\r\n\r\n    if (value.length) {\r\n      filteredData = data.filter(item => {\r\n        let startsWithCondition =\r\n        \r\n          item.message.toLowerCase().startsWith(value.toLowerCase()) ||\r\n          item.mobile.toLowerCase().startsWith(value.toLowerCase()) ||\r\n          item.email.toLowerCase().startsWith(value.toLowerCase()) ||\r\n          item.revenue.toLowerCase().startsWith(value.toLowerCase()) ||\r\n          item.status.toLowerCase().startsWith(value.toLowerCase())\r\n        let includesCondition =\r\n          item.name.toLowerCase().includes(value.toLowerCase()) ||\r\n          item.date.toLowerCase().includes(value.toLowerCase()) ||\r\n          item.email.toLowerCase().includes(value.toLowerCase()) ||\r\n          item.revenue.toLowerCase().includes(value.toLowerCase()) ||\r\n          item.status.toLowerCase().includes(value.toLowerCase())\r\n\r\n        if (startsWithCondition) {\r\n          return startsWithCondition\r\n        } else if (!startsWithCondition && includesCondition) {\r\n          return includesCondition\r\n        } else return null\r\n      })\r\n      this.setState({ filteredData })\r\n    }\r\n  }\r\n\r\n  /* render for all */\r\n  render() {\r\n    let { data, columns, value, filteredData } = this.state\r\n    return (\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>Mapped Doctor List</CardTitle>\r\n        </CardHeader>\r\n        <CardBody className=\"rdt_Wrapper\">\r\n          <DataTable\r\n            className=\"dataTable-custom\"\r\n            data={value.length ? filteredData : data}\r\n            columns={columns}\r\n            noHeader\r\n            pagination\r\n            subHeader\r\n            subHeaderComponent={\r\n              <CustomHeader value={value} handleFilter={this.handleFilter} />\r\n            }\r\n          />\r\n        </CardBody>\r\n      </Card>\r\n    )\r\n  }\r\n  /* ENd rebder */\r\n}\r\n\r\nexport default JTable\r\n"],"sourceRoot":""}