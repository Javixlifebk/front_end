{"version":3,"sources":["views/dashboard/admin/AddActors.js"],"names":["AddActors","state","txtfname","txtlname","txtmob","email","password","confirmPass","roleId","confirmAccept","myexection","handleRegister","e","preventDefault","postData","userName","console","log","axios","method","url","data","headers","then","res","status","setState","localStorage","setItem","document","location","catch","response","i","length","alert","msg","onSubmit","this","className","style","color","fontWeight","name","options","value","label","isFixed","classNamePrefix","onChange","bgroup","required","type","placeholder","target","maxLength","pattern","id","icon","size","defaultChecked","Ripple","React","Component","connect","values","auth","register","useAuth0"],"mappings":"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","file":"static/js/58.baa9beb4.chunk.js","sourcesContent":["import React from \"react\"\nimport { Form, FormGroup, Input, Label, Button } from \"reactstrap\"\nimport Checkbox from \"../../../components/@vuexy/checkbox/CheckboxesVuexy\"\nimport { Check } from \"react-feather\"\nimport { connect } from \"react-redux\"\n//import { history } from \"../../history\"\n//import { useAuth0 } from \"../../authServices/auth0/auth0Service\"\nimport { useAuth0 } from \"../../../authServices/auth0/auth0Service\"\nimport Select from \"react-select\"\nimport axios from 'axios';\n\nclass AddActors extends React.Component {\n  state = {\n    txtfname:'',\n    txtlname:'',\n    txtmob:'',\n    email:'',\n    password:'',\n    confirmPass:'',\n    roleId:'',\n    confirmAccept:true,\n    myexection:''\n  }\n\n  \n\n  handleRegister = e => {\n    e.preventDefault()\n    let postData=\"firstName=\"+this.state.txtfname+\n    \"&lastName=\"+this.state.txtlname+\n    \"&password=\"+this.state.password+\n    \"&email=\"+this.state.email+\n    \"&phoneNo=\"+this.state.txtmob+\"\"+\n    \"&roleId=\"+this.state.roleId+\"\"+\n    \"&userName=\"+this.state.userName+\"\";\n    \nconsole.log(postData);\nlet _targetPostURL=\"http://159.65.148.197:3001/api/auth/register?=\";\naxios(\n{\nmethod: 'post',\nurl: _targetPostURL,\ndata: postData,\nheaders: {'Content-Type': 'application/x-www-form-urlencoded' }\n}\n\n).then(res=>{\nconsole.log(\"In Good way:\");\nconsole.log(res.data);\nif(res.data.status===1 || res.data.status===\"1\")\n{ \n\nthis.setState({myexection:'Successfully Registered !<br/>Verify your account'});\nlocalStorage.setItem(\"email\",this.state.email)\ndocument.location=\"/views/otp\";\n}\n})\n.catch((e)=>{\nconsole.log(\"Exception:\");\nif(e.response.data.status===0 || e.response.data.status===\"0\")\n{ \n\n//this.setState({myexection:e.response.data.message});\n//console.log(\"Data Length=\" + e.response.data);\nvar i=0;\n//alert(e.response.data.data.length);\n//console.dir(e.response.data.data)\nfor(i=0;i<e.response.data.data.length;i++){\n  alert(e.response.data.data[i].msg);\n}\n}\n\n\n});\n\n  }\n\n  render() {\n\n    const bloodGroup = [\n        { value: \"Select Actors\", label: \"Select Actors\", color: \"#00B8D9\", isFixed: true },\n        { value: \"Doctor\", label: \"Doctor\", color: \"#00B8D9\", isFixed: true,roleId:1 },\n        { value: \"NGO\", label: \"NGO\", color: \"#00B8D9\", isFixed: true,roleId:3 },\n        { value: \"Screener\", label: \"Screener\", color: \"#00B8D9\", isFixed: true,roleId:2 },      \n        { value: \"Sevika\", label: \"Sevika\", color: \"#00B8D9\", isFixed: true,roleId:21 },\n        { value: \"Pharmacy\", label: \"Pharmacy\", color: \"#00B8D9\", isFixed: true,roleId:4 }\n       \n      ]\n\n    return (\n      <Form onSubmit={this.handleRegister}>\n        <FormGroup className=\"form-label-group\">\n        <div style={{color:\"#cd098e\",fontWeight:\"bold\"}}>Actors Registration Form</div>\n        </FormGroup>\n        <FormGroup>\n                                    \n                <Select                  \n                name=\"actors\"\n                options={bloodGroup}\n                className=\"React\"\n                classNamePrefix=\"select\"            \n                onChange={e =>{ \n\n                  this.setState({ bgroup: e.value })\n                  this.setState({roleId:e.roleId })\n\n              }\n            }\n                required\n              />\n              \n                </FormGroup>\n       <FormGroup className=\"form-label-group\">\n\n          <Input\n            type=\"text\"\n            placeholder=\"First Name\"\n            required\n            value={this.state.txtfname}\n            onChange={e => this.setState({ txtfname: e.target.value })}\n          />\n          <Label>First Name</Label>\n        </FormGroup>\n        <FormGroup className=\"form-label-group\">\n          <Input\n            type=\"text\"\n            placeholder=\"Last Name\"\n            required\n            value={this.state.txtlname}\n            onChange={e => this.setState({ txtlname: e.target.value })}\n          />\n          <Label>Last Name</Label>\n        </FormGroup>\n\n        <FormGroup className=\"form-label-group\">\n          <Input\n            type=\"text\"\n            placeholder=\"Mobile No\"\n            maxLength={10}\n            pattern=\"[+-]?\\d+(?:[.,]\\d+)?\"\n            required\n            value={this.state.txtmob}\n            onChange={e => this.setState({ txtmob: e.target.value })}\n          />\n          <Label>Mobile No</Label>\n        </FormGroup>\n        <FormGroup className=\"form-label-group\">\n          <Input\n            type=\"email\"\n            placeholder=\"Email\"\n            required\n            value={this.state.email}\n            onChange={e => this.setState({ email: e.target.value })}\n          />\n          <Label>Email</Label>\n        </FormGroup>\n        <FormGroup className=\"form-label-group\">\n          <Input\n            type=\"userName\"\n            placeholder=\"User Name\"\n            name=\"userName\" id=\"userName\"\n            required\n            value={this.state.userName}\n            onChange={e => this.setState({ userName: e.target.value })}\n          />\n          <Label>User Name</Label>\n        </FormGroup>\n        <FormGroup className=\"form-label-group\">\n          <Input\n            type=\"password\"\n            placeholder=\"Password\"\n            required\n            value={this.state.password}\n            onChange={e => this.setState({ password: e.target.value })}\n          />\n          <Label>Password</Label>\n        </FormGroup>\n      \n        <FormGroup className=\"form-label-group\">\n          <Input\n            type=\"password\"\n            placeholder=\"Confirm Password\"\n            required\n            value={this.state.confirmPass}\n            onChange={e => this.setState({ confirmPass: e.target.value })}\n          />\n          <Label>Confirm Password</Label>\n        </FormGroup>\n        <FormGroup>\n          <Checkbox\n            color=\"primary\"\n            icon={<Check className=\"vx-icon\" size={16} />}\n            label=\" I accept the terms & conditions.\"\n            defaultChecked={true}\n          />\n        </FormGroup>\n        <div className=\"d-flex justify-content-between\">\n         \n          <Button.Ripple color=\"primary\" type=\"submit\">\n            Register\n          </Button.Ripple>\n        \n        </div>\n      </Form>\n    )\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    values: state.auth.register\n  }\n}\nexport default connect(mapStateToProps, { useAuth0 })(\n    AddActors\n)\n\n"],"sourceRoot":""}