{"version":3,"sources":["../node_modules/@mui/system/node_modules/clsx/dist/clsx.m.js","../node_modules/@mui/system/esm/createBox.js","../node_modules/@mui/material/Box/Box.js","../node_modules/@mui/x-data-grid/components/toolbar/GridToolbarColumnsButton.js","../node_modules/@mui/material/ListItemIcon/ListItemIcon.js","../node_modules/@mui/x-data-grid/components/toolbar/GridToolbarDensitySelector.js","../node_modules/@mui/x-data-grid/components/toolbar/GridToolbarQuickFilter.js","../node_modules/@mui/x-data-grid/components/toolbar/GridToolbar.js","views/dashboard/survey/SocieconomicSurvey.js"],"names":["r","e","t","f","n","Array","isArray","length","clsx","arguments","_excluded","Box","options","defaultTheme","defaultClassName","generateClassName","styleFunctionSx","defaultStyleFunctionSx","BoxRoot","styled","React","inProps","ref","theme","useTheme","_extendSxProp","extendSxProp","className","component","other","_objectWithoutPropertiesLoose","_jsx","_extends","as","createBox","createTheme","ClassNameGenerator","generate","GridToolbarColumnsButton","props","_rootProps$components","onClick","apiRef","useGridApiContext","rootProps","useGridRootProps","useGridSelector","gridPreferencePanelStateSelector","open","openedPanelValue","disableColumnSelector","components","BaseButton","size","current","getLocaleText","startIcon","ColumnSelectorIcon","event","GridPreferencePanelsValue","columns","hidePreferences","showPreferences","componentsProps","baseButton","children","ListItemIconRoot","name","slot","overridesResolver","styles","ownerState","root","alignItems","alignItemsFlexStart","minWidth","color","vars","palette","action","active","flexShrink","display","marginTop","ListItemIcon","useThemeProps","context","ListContext","classes","slots","composeClasses","getListItemIconUtilityClass","useUtilityClasses","GridToolbarDensitySelector","densityValue","gridDensityValueSelector","densityButtonId","useId","densityMenuId","setOpen","buttonRef","handleRef","useForkRef","densityOptions","icon","DensityCompactIcon","label","value","GridDensityTypes","Compact","DensityStandardIcon","Standard","DensityComfortableIcon","Comfortable","handleDensitySelectorClose","disableDensitySelector","densityElements","map","option","index","_jsxs","MenuItem","newDensity","setDensity","selected","undefined","id","GridMenu","target","onClickAway","position","MenuList","gridClasses","menuList","onKeyDown","isTabKey","key","preventDefault","isHideMenuKey","autoFocusItem","GridToolbarQuickFilterRoot","TextField","toolbarQuickFilter","width","paddingBottom","spacing","marginLeft","borderBottom","divider","height","defaultSearchValueParser","searchText","split","filter","word","defaultSearchValueFormatter","values","join","GridToolbarQuickFilter","quickFilterParser","quickFilterFormatter","debounceMs","quickFilterValues","gridQuickFilterValuesSelector","searchValue","setSearchValue","prevQuickFilterValues","setPrevQuickFilterValues","isDeepEqual","prevSearchValue","updateSearchValue","newSearchValue","setQuickFilterValues","debouncedUpdateSearchValue","debounce","handleSearchValueChange","handleSearchReset","BaseTextField","variant","onChange","placeholder","type","InputProps","startAdornment","QuickFilterIcon","fontSize","endAdornment","IconButton","sx","visibility","QuickFilterClearIcon","baseTextField","GridToolbar","csvOptions","printOptions","excelOptions","showQuickFilter","quickFilterProps","disableColumnFilter","GridToolbarContainer","GridToolbarFilterButton","GridToolbarExport","flex","SocieconomicSurvey","useState","rows","setUsers","useEffect","axios","post","then","response","console","log","data","status","recs","field","headerName","sortable","renderCell","params","style","DataGrid","pageSize","Toolbar","getRowId","_id"],"mappings":"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","file":"static/js/85.3bd21885.chunk.js","sourcesContent":["function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f);else for(t in e)e[t]&&(n&&(n+=\" \"),n+=t);return n}export function clsx(){for(var e,t,f=0,n=\"\";f<arguments.length;)(e=arguments[f++])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport styled from '@mui/styled-engine';\nimport defaultStyleFunctionSx, { extendSxProp } from './styleFunctionSx';\nimport useTheme from './useTheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function createBox(options = {}) {\n  const {\n    defaultTheme,\n    defaultClassName = 'MuiBox-root',\n    generateClassName,\n    styleFunctionSx = defaultStyleFunctionSx\n  } = options;\n  const BoxRoot = styled('div')(styleFunctionSx);\n  const Box = /*#__PURE__*/React.forwardRef(function Box(inProps, ref) {\n    const theme = useTheme(defaultTheme);\n\n    const _extendSxProp = extendSxProp(inProps),\n          {\n      className,\n      component = 'div'\n    } = _extendSxProp,\n          other = _objectWithoutPropertiesLoose(_extendSxProp, _excluded);\n\n    return /*#__PURE__*/_jsx(BoxRoot, _extends({\n      as: component,\n      ref: ref,\n      className: clsx(className, generateClassName ? generateClassName(defaultClassName) : defaultClassName),\n      theme: theme\n    }, other));\n  });\n  return Box;\n}","import { createBox } from '@mui/system';\nimport PropTypes from 'prop-types';\nimport { unstable_ClassNameGenerator as ClassNameGenerator } from '../className';\nimport { createTheme } from '../styles';\nconst defaultTheme = createTheme();\nconst Box = createBox({\n  defaultTheme,\n  defaultClassName: 'MuiBox-root',\n  generateClassName: ClassNameGenerator.generate\n});\nprocess.env.NODE_ENV !== \"production\" ? Box.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Box;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"onClick\"];\nimport * as React from 'react';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { gridPreferencePanelStateSelector } from '../../hooks/features/preferencesPanel/gridPreferencePanelSelector';\nimport { GridPreferencePanelsValue } from '../../hooks/features/preferencesPanel/gridPreferencePanelsValue';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridToolbarColumnsButton = /*#__PURE__*/React.forwardRef(function GridToolbarColumnsButton(props, ref) {\n  var _rootProps$components;\n\n  const {\n    onClick\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const {\n    open,\n    openedPanelValue\n  } = useGridSelector(apiRef, gridPreferencePanelStateSelector);\n\n  const showColumns = event => {\n    if (open && openedPanelValue === GridPreferencePanelsValue.columns) {\n      apiRef.current.hidePreferences();\n    } else {\n      apiRef.current.showPreferences(GridPreferencePanelsValue.columns);\n    }\n\n    onClick == null ? void 0 : onClick(event);\n  }; // Disable the button if the corresponding is disabled\n\n\n  if (rootProps.disableColumnSelector) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(rootProps.components.BaseButton, _extends({\n    ref: ref,\n    size: \"small\",\n    \"aria-label\": apiRef.current.getLocaleText('toolbarColumnsLabel'),\n    startIcon: /*#__PURE__*/_jsx(rootProps.components.ColumnSelectorIcon, {})\n  }, other, {\n    onClick: showColumns\n  }, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseButton, {\n    children: apiRef.current.getLocaleText('toolbarColumns')\n  }));\n});","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getListItemIconUtilityClass } from './listItemIconClasses';\nimport ListContext from '../List/ListContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    alignItems,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', alignItems === 'flex-start' && 'alignItemsFlexStart']\n  };\n  return composeClasses(slots, getListItemIconUtilityClass, classes);\n};\n\nconst ListItemIconRoot = styled('div', {\n  name: 'MuiListItemIcon',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.alignItems === 'flex-start' && styles.alignItemsFlexStart];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  minWidth: 56,\n  color: (theme.vars || theme).palette.action.active,\n  flexShrink: 0,\n  display: 'inline-flex'\n}, ownerState.alignItems === 'flex-start' && {\n  marginTop: 8\n}));\n/**\n * A simple wrapper to apply `List` styles to an `Icon` or `SvgIcon`.\n */\n\nconst ListItemIcon = /*#__PURE__*/React.forwardRef(function ListItemIcon(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiListItemIcon'\n  });\n\n  const {\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const context = React.useContext(ListContext);\n\n  const ownerState = _extends({}, props, {\n    alignItems: context.alignItems\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(ListItemIconRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemIcon.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component, normally `Icon`, `SvgIcon`,\n   * or a `@mui/icons-material` SVG icon element.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default ListItemIcon;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"onClick\"];\nimport * as React from 'react';\nimport { unstable_useId as useId, useForkRef } from '@mui/material/utils';\nimport MenuList from '@mui/material/MenuList';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport { gridDensityValueSelector } from '../../hooks/features/density/densitySelector';\nimport { GridDensityTypes } from '../../models/gridDensity';\nimport { isHideMenuKey, isTabKey } from '../../utils/keyboardUtils';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { GridMenu } from '../menu/GridMenu';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { gridClasses } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const GridToolbarDensitySelector = /*#__PURE__*/React.forwardRef(function GridToolbarDensitySelector(props, ref) {\n  var _rootProps$components;\n\n  const {\n    onClick\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const densityValue = useGridSelector(apiRef, gridDensityValueSelector);\n  const densityButtonId = useId();\n  const densityMenuId = useId();\n  const [open, setOpen] = React.useState(false);\n  const buttonRef = React.useRef(null);\n  const handleRef = useForkRef(ref, buttonRef);\n  const densityOptions = [{\n    icon: /*#__PURE__*/_jsx(rootProps.components.DensityCompactIcon, {}),\n    label: apiRef.current.getLocaleText('toolbarDensityCompact'),\n    value: GridDensityTypes.Compact\n  }, {\n    icon: /*#__PURE__*/_jsx(rootProps.components.DensityStandardIcon, {}),\n    label: apiRef.current.getLocaleText('toolbarDensityStandard'),\n    value: GridDensityTypes.Standard\n  }, {\n    icon: /*#__PURE__*/_jsx(rootProps.components.DensityComfortableIcon, {}),\n    label: apiRef.current.getLocaleText('toolbarDensityComfortable'),\n    value: GridDensityTypes.Comfortable\n  }];\n  const startIcon = React.useMemo(() => {\n    switch (densityValue) {\n      case GridDensityTypes.Compact:\n        return /*#__PURE__*/_jsx(rootProps.components.DensityCompactIcon, {});\n\n      case GridDensityTypes.Comfortable:\n        return /*#__PURE__*/_jsx(rootProps.components.DensityComfortableIcon, {});\n\n      default:\n        return /*#__PURE__*/_jsx(rootProps.components.DensityStandardIcon, {});\n    }\n  }, [densityValue, rootProps]);\n\n  const handleDensitySelectorOpen = event => {\n    setOpen(true);\n    onClick == null ? void 0 : onClick(event);\n  };\n\n  const handleDensitySelectorClose = () => setOpen(false);\n\n  const handleDensityUpdate = newDensity => {\n    apiRef.current.setDensity(newDensity);\n    setOpen(false);\n  };\n\n  const handleListKeyDown = event => {\n    if (isTabKey(event.key)) {\n      event.preventDefault();\n    }\n\n    if (isHideMenuKey(event.key)) {\n      handleDensitySelectorClose();\n    }\n  }; // Disable the button if the corresponding is disabled\n\n\n  if (rootProps.disableDensitySelector) {\n    return null;\n  }\n\n  const densityElements = densityOptions.map((option, index) => /*#__PURE__*/_jsxs(MenuItem, {\n    onClick: () => handleDensityUpdate(option.value),\n    selected: option.value === densityValue,\n    children: [/*#__PURE__*/_jsx(ListItemIcon, {\n      children: option.icon\n    }), option.label]\n  }, index));\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(rootProps.components.BaseButton, _extends({\n      ref: handleRef,\n      size: \"small\",\n      startIcon: startIcon,\n      \"aria-label\": apiRef.current.getLocaleText('toolbarDensityLabel'),\n      \"aria-expanded\": open ? 'true' : undefined,\n      \"aria-haspopup\": \"menu\",\n      \"aria-controls\": densityMenuId,\n      id: densityButtonId\n    }, other, {\n      onClick: handleDensitySelectorOpen\n    }, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseButton, {\n      children: apiRef.current.getLocaleText('toolbarDensity')\n    })), /*#__PURE__*/_jsx(GridMenu, {\n      open: open,\n      target: buttonRef.current,\n      onClickAway: handleDensitySelectorClose,\n      position: \"bottom-start\",\n      children: /*#__PURE__*/_jsx(MenuList, {\n        id: densityMenuId,\n        className: gridClasses.menuList,\n        \"aria-labelledby\": densityButtonId,\n        onKeyDown: handleListKeyDown,\n        autoFocusItem: open,\n        children: densityElements\n      })\n    })]\n  });\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"quickFilterParser\", \"quickFilterFormatter\", \"debounceMs\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport TextField from '@mui/material/TextField';\nimport IconButton from '@mui/material/IconButton';\nimport { styled } from '@mui/material/styles';\nimport { debounce } from '@mui/material/utils';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { gridQuickFilterValuesSelector } from '../../hooks/features/filter';\nimport { isDeepEqual } from '../../utils/utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridToolbarQuickFilterRoot = styled(TextField, {\n  name: 'MuiDataGrid',\n  slot: 'ToolbarQuickFilter',\n  overridesResolver: (props, styles) => styles.toolbarQuickFilter\n})(({\n  theme\n}) => ({\n  width: 'auto',\n  paddingBottom: theme.spacing(0.5),\n  '& input': {\n    marginLeft: theme.spacing(0.5)\n  },\n  '& .MuiInput-underline:before': {\n    borderBottom: `1px solid ${theme.palette.divider}`\n  },\n  [`& input[type=search]::-ms-clear,\n& input[type=search]::-ms-reveal`]: {\n    /* clears the 'X' icon from IE */\n    display: 'none',\n    width: 0,\n    height: 0\n  },\n  [`& input[type=\"search\"]::-webkit-search-decoration,\n  & input[type=\"search\"]::-webkit-search-cancel-button,\n  & input[type=\"search\"]::-webkit-search-results-button,\n  & input[type=\"search\"]::-webkit-search-results-decoration`]: {\n    /* clears the 'X' icon from Chrome */\n    display: 'none'\n  }\n}));\n\nconst defaultSearchValueParser = searchText => searchText.split(' ').filter(word => word !== '');\n\nconst defaultSearchValueFormatter = values => values.join(' ');\n\nfunction GridToolbarQuickFilter(props) {\n  var _rootProps$components;\n\n  const {\n    quickFilterParser = defaultSearchValueParser,\n    quickFilterFormatter = defaultSearchValueFormatter,\n    debounceMs = 500\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const quickFilterValues = useGridSelector(apiRef, gridQuickFilterValuesSelector);\n  const [searchValue, setSearchValue] = React.useState(() => quickFilterFormatter(quickFilterValues != null ? quickFilterValues : []));\n  const [prevQuickFilterValues, setPrevQuickFilterValues] = React.useState(quickFilterValues);\n  React.useEffect(() => {\n    if (!isDeepEqual(prevQuickFilterValues, quickFilterValues)) {\n      // The model of quick filter value has been updated\n      setPrevQuickFilterValues(quickFilterValues); // Update the input value if needed to match the new model\n\n      setSearchValue(prevSearchValue => isDeepEqual(quickFilterParser(prevSearchValue), quickFilterValues) ? prevSearchValue : quickFilterFormatter(quickFilterValues != null ? quickFilterValues : []));\n    }\n  }, [prevQuickFilterValues, quickFilterValues, quickFilterFormatter, quickFilterParser]);\n  const updateSearchValue = React.useCallback(newSearchValue => {\n    apiRef.current.setQuickFilterValues(quickFilterParser(newSearchValue));\n  }, [apiRef, quickFilterParser]);\n  const debouncedUpdateSearchValue = React.useMemo(() => debounce(updateSearchValue, debounceMs), [updateSearchValue, debounceMs]);\n  const handleSearchValueChange = React.useCallback(event => {\n    const newSearchValue = event.target.value;\n    setSearchValue(newSearchValue);\n    debouncedUpdateSearchValue(newSearchValue);\n  }, [debouncedUpdateSearchValue]);\n  const handleSearchReset = React.useCallback(() => {\n    setSearchValue('');\n    updateSearchValue('');\n  }, [updateSearchValue]);\n  return /*#__PURE__*/_jsx(GridToolbarQuickFilterRoot, _extends({\n    as: rootProps.components.BaseTextField,\n    variant: \"standard\",\n    value: searchValue,\n    onChange: handleSearchValueChange,\n    placeholder: apiRef.current.getLocaleText('toolbarQuickFilterPlaceholder'),\n    \"aria-label\": apiRef.current.getLocaleText('toolbarQuickFilterLabel'),\n    type: \"search\",\n    InputProps: {\n      startAdornment: /*#__PURE__*/_jsx(rootProps.components.QuickFilterIcon, {\n        fontSize: \"small\"\n      }),\n      endAdornment: /*#__PURE__*/_jsx(IconButton, {\n        \"aria-label\": apiRef.current.getLocaleText('toolbarQuickFilterDeleteIconLabel'),\n        size: \"small\",\n        sx: {\n          visibility: searchValue ? 'visible' : 'hidden'\n        },\n        onClick: handleSearchReset,\n        children: /*#__PURE__*/_jsx(rootProps.components.QuickFilterClearIcon, {\n          fontSize: \"small\"\n        })\n      })\n    }\n  }, other, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseTextField));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridToolbarQuickFilter.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The debounce time in milliseconds.\n   * @default 500\n   */\n  debounceMs: PropTypes.number,\n\n  /**\n   * Function responsible for formatting values of quick filter in a string when the model is modified\n   * @param {any[]} values The new values passed to the quick filter model\n   * @returns {string} The string to display in the text field\n   */\n  quickFilterFormatter: PropTypes.func,\n\n  /**\n   * Function responsible for parsing text input in an array of independent values for quick filtering.\n   * @param {string} input The value entered by the user\n   * @returns {any[]} The array of value on which quick filter is applied\n   */\n  quickFilterParser: PropTypes.func\n} : void 0;\nexport { GridToolbarQuickFilter };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"csvOptions\", \"printOptions\", \"excelOptions\", \"showQuickFilter\", \"quickFilterProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Box from '@mui/material/Box';\nimport { GridToolbarContainer } from '../containers/GridToolbarContainer';\nimport { GridToolbarColumnsButton } from './GridToolbarColumnsButton';\nimport { GridToolbarDensitySelector } from './GridToolbarDensitySelector';\nimport { GridToolbarFilterButton } from './GridToolbarFilterButton';\nimport { GridToolbarExport } from './GridToolbarExport';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { GridToolbarQuickFilter } from './GridToolbarQuickFilter';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridToolbar = /*#__PURE__*/React.forwardRef(function GridToolbar(props, ref) {\n  // TODO v6: think about where export option should be passed.\n  // from componentProps={{ toolbarExport: { ...exportOption} }} seems to be more appropriate\n  const {\n    csvOptions,\n    printOptions,\n    excelOptions,\n    showQuickFilter = false,\n    quickFilterProps = {}\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const rootProps = useGridRootProps();\n\n  if (rootProps.disableColumnFilter && rootProps.disableColumnSelector && rootProps.disableDensitySelector && !showQuickFilter) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxs(GridToolbarContainer, _extends({\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/_jsx(GridToolbarColumnsButton, {}), /*#__PURE__*/_jsx(GridToolbarFilterButton, {}), /*#__PURE__*/_jsx(GridToolbarDensitySelector, {}), /*#__PURE__*/_jsx(GridToolbarExport, {\n      csvOptions: csvOptions,\n      printOptions: printOptions // TODO: remove the reference to excelOptions in community package\n      ,\n      excelOptions: excelOptions\n    }), /*#__PURE__*/_jsx(Box, {\n      sx: {\n        flex: 1\n      }\n    }), showQuickFilter && /*#__PURE__*/_jsx(GridToolbarQuickFilter, _extends({}, quickFilterProps))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridToolbar.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Props passed to the quick filter component.\n   */\n  quickFilterProps: PropTypes.object,\n\n  /**\n   * Show the quick filter component.\n   * @default false\n   */\n  showQuickFilter: PropTypes.bool,\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridToolbar };","import React, { useEffect, useState } from 'react'\r\nimport '@mui/x-data-grid-generator'\r\n// import Button from '@mui/material/Button'\r\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid'\r\nimport axios from \"axios\";\r\n\r\n\r\nfunction SocieconomicSurvey() {\r\n\r\n  const [rows, setUsers] = useState([])\r\n \r\n  useEffect(() => {\r\n\t\t  axios.post('http://159.65.148.197:3001/api/socioeconomicsurvey/SocioEconomicSurveyList')\r\n\t\t .then(response => {\r\n\t\t\t\t\tconsole.log(\"Returned data:\");\r\n\t\t\t\t\tif(response.data.status===1)\r\n\t\t\t\t\t  {\r\n\t\t\t\t\t\t  var recs=response.data.data.data;\r\n\t\t\t\t\t\t  setUsers(recs);\r\n\t\t\t\t\t  }\r\n\t\t },[]);\r\n })\r\n\r\n\r\n  const columns = [\r\n    { field: 'socioeconomicsurveyId', headerName: 'Socioeconomic Survey Id', width: 60 },\r\n    { field: 'noOfEarners', headerName: 'No.Of Earners', width: 150 },\r\n    { field: 'nameOfEarners', headerName: 'Name Of Earners', width: 150 },\r\n    { field: 'Age Of Earners', headerName: 'ageOfEarners', width: 120 },\r\n    { field: 'occupationOfEarners', headerName: 'Occupation Of Earners', width: 150 },\r\n    { field: 'isBankAccount', headerName: 'Is Bank Account', width: 300 },\r\n    { field: 'statusOfHouse', headerName: 'Status Of House', width: 300 },\r\n    { field: 'totalIncome', headerName: 'Total Income', width: 300 },\r\n    { field: 'foodExpense', headerName: 'Food Expense', width: 300 },\r\n    { field: 'healthExpense', headerName: 'Health Expense', width: 300 },\r\n    { field: 'educationExpense', headerName: 'Education Expense', width: 300 },\r\n    { field: 'intoxicationExpense', headerName: 'Intoxication Expense', width: 300 },\r\n    { field: 'conveyanceExpense', headerName: 'Conveyance Expense', width: 300 },\r\n   \r\n\r\n    {\r\n      field: 'cultivableLand',\r\n      headerName: 'Cultivable Land',\r\n      sortable: false,\r\n      width: 100,\r\n      renderCell: (params) => {\r\n        const onClick = (e) => {\r\n          e.stopPropagation() // don't select this row after clicking\r\n          const api = params.api\r\n          const thisRow = {}\r\n\r\n          api\r\n            .getAllColumns()\r\n            .filter((c) => c.field !== '__check__' && !!c)\r\n            .forEach(\r\n              (c) => (thisRow[c.field] = params.getValue(params.id, c.field)),\r\n            )\r\n\r\n          return alert(JSON.stringify(thisRow, null, 4))\r\n        }\r\n      \r\n      },\r\n    },\r\n  ]\r\n\r\n  return (\r\n    <>\r\n    <div className=\"bannermain\">\r\n      <div className=\"container\">\r\n        <h2 className=\"font-24-31 font-20-26 font-style-normal font-weight-600 colorformhrading titlewadd\">\r\n        Socieconomic Survey\r\n        </h2>\r\n        <div style={{ height: '75vh', width: '100%' }}>\r\n         \r\n          <DataGrid\r\n            className=\"pb-3\"\r\n            rows={rows}\r\n            columns={columns}\r\n            pageSize={8}\r\n            components={{ Toolbar: GridToolbar }}\r\n              getRowId={(rows) => rows._id}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </>\r\n  )\r\n}\r\n\r\nexport default SocieconomicSurvey"],"sourceRoot":""}