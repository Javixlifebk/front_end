{"version":3,"sources":["views/dashboard/admin/PrescriptionList.js","assets/img/icons/viewprofile.png"],"names":["CustomHeader","props","className","value","placeholder","onChange","e","handleFilter","size","JTable","target","data","state","filteredData","setState","length","filter","item","startsWithCondition","firstName","toLowerCase","startsWith","lastName","includesCondition","includes","columns","name","selector","sortable","minWidth","cell","row","title","screenerId","doctorId","prescriptionId","src","profileImg","alt","onClick","handleClick","screenerLoginId","style","width","cursor","recs","loadRecs","bind","this","console","log","_userid","localStorage","setItem","window","location","mounted","axios","post","then","response","status","message","removeItem","Ripple","color","type","handleBack","noHeader","pagination","subHeader","subHeaderComponent","React","Component","module","exports"],"mappings":"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","file":"static/js/51.9c62051f.chunk.js","sourcesContent":["import React from \"react\"\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardTitle,\r\n  Badge,\r\n  Input,\r\n  Button\r\n} from \"reactstrap\"\r\nimport DataTable from \"react-data-table-component\"\r\nimport { Star, Search } from \"react-feather\"\r\nimport axios from \"axios\";\r\nimport profileImg from \"../../../assets/img/icons/viewprofile.png\"\r\nconst CustomHeader = props => {\r\n  return (\r\n    <div className=\"d-flex flex-wrap justify-content-between\">\r\n      <div className=\"add-new\">\r\n        \r\n      </div>\r\n      <div className=\"position-relative has-icon-left mb-1\">\r\n        <Input value={props.value} placeholder=\"search\" onChange={e => props.handleFilter(e)} />\r\n        <div className=\"form-control-position\">\r\n          <Search size=\"15\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nclass JTable extends React.Component {\r\n constructor(props) {\r\n    super(props);\t\r\n  this.state = {\r\n    columns: [\r\n      {\r\n        name: \"Screener ID\",\r\n        selector: \"screenerid\",\r\n        sortable: true,\r\n        minWidth: \"200px\",\r\n        cell: row => (\r\n          <div className=\"d-flex flex-xl-row flex-column align-items-xl-center align-items-start py-xl-0 py-1\">\r\n            \r\n            <div className=\"user-info text-truncate ml-xl-50 ml-0\">\r\n              <span\r\n                title={row.screenerId}\r\n                className=\"d-block text-bold-500 text-truncate mb-0\">\r\n                {row.screenerId}\r\n              </span>\r\n              \r\n            </div>\r\n          </div>\r\n        )\r\n      },\r\n      {\r\n        name: \"doctorId\",\r\n        selector: \"doctorId\",\r\n        sortable: true,\r\n        cell: row => (\r\n          <p className=\"text-bold-500 text-truncate mb-0\">{row.doctorId}</p>\r\n        )\r\n      },\r\n      {\r\n        name: \"prescriptionId\",\r\n        selector: \"prescriptionId\",\r\n        sortable: true,\r\n        cell: row => (\r\n          <p className=\"text-bold-500 text-truncate mb-0\">{row.prescriptionId}</p>\r\n        )\r\n      },\r\n     \r\n    //   {\r\n    //     name: \"Qualification\",\r\n    //     selector: \"qualification\",\r\n    //     sortable: true,\r\n    //     cell: row => (\r\n    //       <p className=\"text-bold-500 text-truncate mb-0\">{row.info.qualification}</p>\r\n    //     )\r\n    //   },\r\n    //   {\r\n    //     name: \"onBoarding.Date\",\r\n    //     selector: \"boradingDate\",\r\n    //     sortable: true,\r\n    //     cell: row => (\r\n    //       <p className=\"text-bold-500 mb-0\">{row.info.dateOfOnBoarding}</p>\r\n    //     )\r\n    //   },\r\n      ,    \r\n      {\r\n        name: \"Action\",\r\n        selector: \"\",\r\n        sortable: true,\r\n        cell: row => (\r\n          <div>\r\n          <img\r\n          src={profileImg}\r\n          alt=\"porfileImg\"\r\n          onClick={() =>this.handleClick(row.screenerLoginId)}\r\n          style={{width:\"30px\",cursor:\"pointer\"}}\r\n          className=\"img-fluid img-border rounded-circle box-shadow-1\"\r\n        />\r\n        \r\n      </div>\r\n        )\r\n      }\r\n    ],\r\n    data: [],\r\n    filteredData: [],\r\n    value: \"\",\r\n\trecs:[]\r\n  }\r\n  this.loadRecs = this.loadRecs.bind(this);\r\n} // cosntructor\r\nloadRecs(recs)\r\n {\r\n\t \r\n\t this.setState({data:recs});\r\n\t console.log(this.state.recs);\r\n }\r\n\r\n handleClick(_userid) {    \r\n  localStorage.setItem(\"Scrid\",_userid);\r\n  window.location='../../views/dashboard/screenerprofile'  \r\n}\r\n\r\n handleBack() {    \r\n  window.location='../../views/dashboard/ngolist'\r\n}\r\n  \r\ncomponentWillUnmount(){ console.log(\"WIllUnmount************\"); this.mounted = false;}\r\ncomponentDidMount() {console.log(\"DID MOUNT ************\");\r\n\t\tthis.mounted = true;\r\n\t\t//this.setState({data:null});\r\n        \r\n\t\taxios.post('http://159.65.148.197:3001/api/doctor/prescriptionlist')\r\n\t\t .then(response => {\r\n\t\t\t\t\tconsole.log(\"Returned data:\", response.data.status);\r\n\t\t\t\t\tif(response.data.status===1)\r\n\t\t\t\t\t  {\r\n\t\t\t\t\t\t  var msg=response.data.message;\r\n\t\t\t\t\t\t  var recs=response.data.data.data;\r\n\t\t\t\t\t\t  console.log(recs[0]);\r\n\t\t\t\t\t\t  this.loadRecs(recs);\r\n              localStorage.removeItem(\"Ngoid\")\r\n\t\t\t\t\t  }\r\n\t\t });// then\r\n}\r\n\r\n  handleFilter = e => {\r\n    let value = e.target.value\r\n    let data = this.state.data\r\n    let filteredData = this.state.filteredData\r\n    this.setState({ value })\r\n\r\n    if (value.length) {\r\n      filteredData = data.filter(item => {\r\n        let startsWithCondition =\r\n        \r\n          item.firstName.toLowerCase().startsWith(value.toLowerCase()) ||\r\n          item.lastName.toLowerCase().startsWith(value.toLowerCase()) \r\n        \r\n        let includesCondition =\r\n          item.firstName.toLowerCase().includes(value.toLowerCase()) ||\r\n          item.lastName.toLowerCase().includes(value.toLowerCase()) \r\n         \r\n\r\n        if (startsWithCondition) {\r\n          return startsWithCondition\r\n        } else if (!startsWithCondition && includesCondition) {\r\n          return includesCondition\r\n        } else return null\r\n      })\r\n      this.setState({ filteredData })\r\n    }\r\n  }\r\n\r\n  /* render for all */\r\n  render() {\r\n    let { data, columns, value, filteredData } = this.state\r\n    return (\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>Prescribed List  <Button.Ripple\r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                    className=\"mr-1 mb-1\"\r\n                    onClick={this.handleBack}\r\n                  >\r\n                   Back\r\n                  </Button.Ripple></CardTitle>\r\n        </CardHeader>\r\n        <CardBody className=\"rdt_Wrapper\">\r\n          <DataTable\r\n            className=\"dataTable-custom\"\r\n            data={value.length ? filteredData : data}\r\n            columns={columns}\r\n            noHeader\r\n            pagination\r\n            subHeader\r\n            subHeaderComponent={\r\n              <CustomHeader value={value} handleFilter={this.handleFilter} />\r\n            }\r\n          />\r\n        </CardBody>\r\n      </Card>\r\n    )\r\n  }\r\n  /* ENd rebder */\r\n}\r\n\r\nexport default JTable\r\n","module.exports = __webpack_public_path__ + \"static/media/viewprofile.08133088.png\";"],"sourceRoot":""}