{"version":3,"sources":["views/dashboard/doctor/ReferPatientList.js"],"names":["CustomToolbar","printOptions","disableToolbarButton","ReferPatientList","useState","rows","setUsers","useEffect","axios","post","token","isUnrefer","then","response","console","log","data","status","recs","columns","field","headerName","width","sortable","renderCell","params","className","style","height","pageSize","components","Toolbar","getRowId","_id"],"mappings":"mOAMA,SAASA,IACP,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAmBC,aAAc,CAAEC,sBAAsB,KAEzD,kBAAC,IAAD,OAgJSC,UA3If,WAA6B,IAAD,EACDC,mBAAS,IADR,mBACnBC,EADmB,KACbC,EADa,KAE1BC,qBAAU,WACRC,IAAMC,KAAK,sDAAuD,CAACC,MAAM,wBAAwBC,WAAU,IAC3GC,MAAK,SAAAC,GAEJ,GADAC,QAAQC,IAAI,kBACc,IAAvBF,EAASG,KAAKC,OACf,CACC,IAAIC,EAAKL,EAASG,KAAKA,KAAKA,KAC5BV,EAASY,MAEZ,OAGH,IAAMC,EAAU,CAGd,CAAEC,MAAO,YAAaC,WAAY,aAAcC,MAAO,KACvD,CAAEF,MAAO,UAAWC,WAAY,oBAAqBC,MAAO,KAC5D,CAAEF,MAAO,YAAaC,WAAY,aAAcC,MAAO,KACvD,CAAEF,MAAO,WAAYC,WAAY,eAAgBC,MAAO,KACxD,CAAEF,MAAO,mBAAoBC,WAAY,gBAAiBC,MAAO,KACjE,CAAEF,MAAO,SAAUC,WAAY,SAAUC,MAAO,KAEhD,CAAEF,MAAO,aAAcC,WAAY,aAAcC,MAAO,IACvD,CAAEF,MAAO,UAAWC,WAAY,UAAWC,MAAO,KAClD,CACCF,MAAO,WACPC,WAAY,WACZE,UAAU,EACVD,MAAO,IACPE,WAAY,SAACC,MAmBf,CAAEL,MAAO,QAASC,WAAY,QAASC,MAAO,KAyB9C,CACEF,MAAO,SACPC,WAAY,SACZE,UAAU,EACVD,MAAO,IACPE,WAAY,SAACC,GAgBX,OACE,oCACE,4BAAQC,UAAU,eAAlB,6BAaV,OAEE,oCAEA,yBAAKA,UAAU,cACb,yBAAKA,UAAU,aACb,wBAAIA,UAAU,sFAAd,yBAGA,yBAAKC,MAAO,CAAEC,OAAQ,OAAQN,MAAO,SAEnC,kBAAC,IAAD,CACEI,UAAU,OACVrB,KAAMA,EACNc,QAASA,EACTU,SAAU,EACVC,WAAY,CACVC,QAAS/B,GAEXgC,SAAU,SAAC3B,GAAD,OAAUA,EAAK4B","file":"static/js/68.4573eb89.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\r\n// import { environment } from '../../api'\r\nimport '@mui/x-data-grid-generator'\r\nimport { DataGrid, GridToolbar,GridToolbarContainer,GridFilterPanel,GridToolbarExport,GridToolbarFilterButton } from '@mui/x-data-grid'\r\nimport axios from \"axios\";\r\nimport Button from '@mui/material/Button'\r\nfunction CustomToolbar() {\r\n  return (\r\n    <GridToolbarContainer>\r\n      <GridToolbarExport printOptions={{ disableToolbarButton: true }} />\r\n      {/* <GridFilterPanel /> */}\r\n      <GridToolbarFilterButton />\r\n    </GridToolbarContainer>\r\n  );\r\n}\r\n\r\nfunction ReferPatientList() {\r\n  const [rows, setUsers] = useState([])\r\n  useEffect(() => {\r\n\t\t  axios.post('http://159.65.148.197:3001/api/citizen/citizenrefer', {token:'dfjkhsdfaksjfh3756237',isUnrefer:true })\r\n\t\t .then(response => {\r\n\t\t\t\t\tconsole.log(\"Returned data:\");\r\n\t\t\t\t\tif(response.data.status===1)\r\n\t\t\t\t\t  {\r\n\t\t\t\t\t\t  var recs=response.data.data.data;\r\n\t\t\t\t\t\t  setUsers(recs);\r\n\t\t\t\t\t  }\r\n\t\t },[]);\r\n })\r\n\r\n  const columns = [\r\n    // { field: 'doctorId', headerName: 'Doctor Id', width: 150 },\r\n    \r\n    { field: 'citizenId', headerName: 'citizen Id', width: 150 },\r\n    { field: 'javixId', headerName: ' citizen Javix Id', width: 120 },\r\n    { field: 'createdAt', headerName: 'Created At', width: 150 },\r\n    { field: 'fullname', headerName: 'Citizen Name', width: 120},\r\n    { field: 'screenerfullname', headerName: 'screener Name', width: 120},\r\n    { field: 'mobile', headerName: 'mobile', width: 120 },\r\n    // { field: 'dateOfOnBoarding', headerName: 'dateOfOnBoarding', width: 100},\r\n    { field: 'screenerId', headerName: 'ScreenerId', width: 80 },\r\n     { field: 'address', headerName: 'Address', width: 120 },\r\n     {\r\n      field: 'district',\r\n      headerName: 'District',\r\n      sortable: false,\r\n      width: 100,\r\n      renderCell: (params) => {\r\n        const onClick = (e) => {\r\n          e.stopPropagation() // don't select this row after clicking\r\n\r\n          const api = params.api\r\n          const thisRow = {}\r\n          api\r\n            .getAllColumns()\r\n            .filter((c) => c.field !== '__check__' && !!c)\r\n            .forEach(\r\n              (c) => (thisRow[c.field] = params.getValue(params.id, c.field)),\r\n            )\r\n\r\n          return alert(JSON.stringify(thisRow, null, 4))\r\n        }\r\n      \r\n      },\r\n    },\r\n    \r\n    { field: 'state', headerName: 'state', width: 120 },\r\n    // {\r\n    //   field: \"action\",\r\n    //   headerName: \"Action\",\r\n    //   sortable: false,\r\n    //   renderCell: (params) => {\r\n    //     const onClick = (e) => {\r\n    //       e.stopPropagation(); // don't select this row after clicking\r\n  \r\n    //       // const api: GridApi = params.api;\r\n    //       // const thisRow: Record<string, GridCellValue> = {};\r\n  \r\n    //       api\r\n    //         .getAllColumns()\r\n    //         .filter((c) => c.field !== \"__check__\" && !!c)\r\n    //         .forEach(\r\n    //           (c) => (thisRow[c.field] = params.getValue(params.id, c.field))\r\n    //         );\r\n  \r\n    //       return alert(JSON.stringify(thisRow, null, 4));\r\n    //     };\r\n  \r\n    //     return <Button onClick={onClick}>Click</Button>;\r\n    //   }\r\n    // },\r\n    {\r\n      field: 'Action',\r\n      headerName: 'Action',\r\n      sortable: false,\r\n      width: 200,\r\n      renderCell: (params) => {\r\n        const onClick = (e) => {\r\n          e.stopPropagation() // don't select this row after clicking\r\n\r\n          const api = params.api\r\n          const thisRow = {}\r\n\r\n          api\r\n            .getAllColumns()\r\n            .filter((c) => c.field !== '__check__' && !!c)\r\n            .forEach(\r\n              (c) => (thisRow[c.field] = params.getValue(params.id, c.field)),\r\n            )\r\n\r\n          return alert(JSON.stringify(thisRow, null, 4))\r\n        }\r\n        return (\r\n          <>\r\n            <button className='btn-success'>\r\n              Picked And Prescribed\r\n            </button>\r\n            {/* <Button onClick={setModalIsOpenToTrue2}>\r\n              <BallotIcon />\r\n            </Button> */}\r\n          </>\r\n        )\r\n      },\r\n    },\r\n  \r\n  ]\r\n\r\n  return (\r\n   \r\n    <>\r\n   \r\n    <div className=\"bannermain\">\r\n      <div className=\"container\">\r\n        <h2 className=\"font-24-31 font-20-26 font-style-normal font-weight-600 colorformhrading titlewadd\">\r\n         Referred Patient List\r\n        </h2>\r\n        <div style={{ height: '75vh', width: '100%' }}>\r\n         \r\n          <DataGrid\r\n            className=\"pb-3\"\r\n            rows={rows}\r\n            columns={columns}\r\n            pageSize={8}\r\n            components={{\r\n              Toolbar: CustomToolbar,\r\n            }}\r\n            getRowId={(rows) => rows._id}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </>\r\n  )\r\n}\r\n\r\nexport default ReferPatientList"],"sourceRoot":""}