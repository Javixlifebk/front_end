{"version":3,"sources":["views/dashboard/admin/IssueAddressing.js"],"names":["AddAllergy","toggleModal","setState","prevState","modal","state","fname","doctype","fileuploads","curTime","Date","toLocaleString","onChangeHandler","event","target","files","loaded","handleSubmit","e","preventDefault","console","log","postData","localStorage","getItem","axios","method","url","data","headers","then","res","status","alert","window","location","catch","Fragment","action","enctype","onSubmit","this","sm","for","name","options","value","label","color","isFixed","className","classNamePrefix","onChange","required","type","id","placeholder","Ripple","outline","React","Component"],"mappings":"oVAkEMA,E,4MAEJC,YAAc,WACZ,EAAKC,UAAS,SAAAC,GAAS,MAAK,CAC1BC,OAAQD,EAAUC,W,EAGtBC,MAAQ,CACNC,MAAM,GACNC,QAAQ,GACRC,YAAY,GACZC,SAAU,IAAIC,MAAOC,kB,EAGvBC,gBAAgB,SAAAC,GAGd,EAAKX,SAAS,CACZM,YAAaK,EAAMC,OAAOC,MAAM,GAChCC,OAAQ,K,EAMZC,aAAe,SAAAC,GACbA,EAAEC,iBAEFC,QAAQC,IAAI,UAAY,EAAKhB,MAAME,SAGnC,IAAIe,EAAS,WAAWC,aAAaC,QAAQ,WAC7CF,GAAU,+BACVA,GAAU,aAAa,EAAKjB,MAAMC,MAClCgB,GAAU,WAAW,EAAKjB,MAAME,QAChCa,QAAQC,IAAIC,GAEZG,IACE,CACEC,OAAQ,OACRC,IAJe,uDAKfC,KAAMN,EACNO,QAAS,CAAC,eAAgB,uCAG5BC,MAAK,SAAAC,GAELX,QAAQC,IAAI,gBACZD,QAAQC,IAAIU,EAAIH,MACK,IAAlBG,EAAIH,KAAKI,SACVC,MAAM,sCACNC,OAAOC,SAAS,yCAGnBC,OAAM,SAAAlB,GAELE,QAAQC,IAAI,cACZD,QAAQC,IAAIH,O,uDAON,IAAD,OAUP,OAEI,kBAAC,IAAMmB,SAAP,KACC,6BAED,kBAAC,IAAD,CAAMC,OAAO,IAAIC,QAAQ,sBAAsBC,SAAUC,KAAKxB,cAC1D,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAKyB,GAAG,MACJ,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,IAAI,gBAAX,iBACA,kBAAC,IAAD,CACAC,KAAK,SACLC,QApBO,CACnB,CAAEC,MAAO,gBAAiBC,MAAO,gBAAiBC,MAAO,UAAWC,SAAS,GAC7E,CAAEH,MAAO,IAAKC,MAAO,WAAYC,MAAO,UAAWC,SAAS,GAC5D,CAAEH,MAAO,IAAKC,MAAO,WAAYC,MAAO,UAAWC,SAAS,GAC5D,CAAEH,MAAO,IAAKC,MAAO,SAAUC,MAAO,UAAWC,SAAS,IAiB9CC,UAAU,QACVC,gBAAgB,SAChBC,SAAU,SAAAlC,GAAC,OAAI,EAAKhB,SAAS,CAAEK,QAASW,EAAE4B,SAC1CO,UAAQ,OAKZ,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAKX,GAAG,MACN,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,IAAI,gBAAX,YACA,kBAAC,IAAD,CACEW,KAAK,WACLV,KAAK,QACLW,GAAG,eACHC,YAAY,WACZV,MAAOL,KAAKpC,MAAMC,MAClB8C,SAAU,SAAAlC,GAAC,OAAI,EAAKhB,SAAS,CAAEI,MAAOY,EAAEJ,OAAOgC,SAC/CO,UAAQ,OAMd,kBAAC,IAAD,KAGA,kBAAC,IAAD,CAAKX,GAAG,MACN,kBAAC,IAAD,KACE,kBAAC,IAAOe,OAAR,CACET,MAAM,UACNM,KAAK,SACLJ,UAAU,aAHZ,UAQA,kBAAC,IAAOO,OAAR,CACEC,SAAO,EACPV,MAAM,UACNM,KAAK,QACLJ,UAAU,QAJZ,kB,GA7HOS,IAAMC,WAkJhB5D","file":"static/js/60.fe50e218.chunk.js","sourcesContent":["import React,{ Suspense, lazy } from \"react\"\nimport Select from \"react-select\"\nimport {\n  Card,\n  CardHeader,\n  CardTitle,\n  CardBody,\n  FormGroup,\n  Row,\n  Col,\n  Input,\n  Form,\n  Button,\n  Label,\n  Modal,\n  ModalHeader,\n  ModalBody \n \n} from \"reactstrap\"\n\nimport { Router, Switch, Route } from \"react-router-dom\"\nimport { connect } from \"react-redux\"\n\n\nimport Checkbox from \"../../../components/@vuexy/checkbox/CheckboxesVuexy\"\nimport Breadcrumbs from \"../../../components/@vuexy/breadCrumbs/BreadCrumb\"\nimport { Check } from \"react-feather\"\n\nimport Spinner from \"../../../components/@vuexy/breadCrumbs/BreadCrumb\"\n//import { ContextLayout } from \"../../utility/context/Layout\"\nimport { ContextLayout } from \"../../../utility/context/Layout\"\n\nimport DataTable from \"../../tables/data-tables/DataTableCustom\"\nimport axios from 'axios';\nconst RouteConfig = ({ component: Component, fullLayout, ...rest }) => (\n  <Route\n    {...rest}\n    render={props => {\n      return (\n        <ContextLayout.Consumer>\n          {context => {\n            let LayoutTag =\n              fullLayout === true\n                ? context.fullLayout\n                : context.state.activeLayout === \"horizontal\"\n                ? context.horizontalLayout\n                : context.VerticalLayout\n            return (\n              <LayoutTag {...props} permission={props.user}>\n                <Suspense fallback={<Spinner />}>\n                  <Component {...props} />\n                </Suspense>\n              </LayoutTag>\n            )\n          }}\n        </ContextLayout.Consumer>\n      )\n    }}\n  />\n)\nconst mapStateToProps = state => {\n  return {\n    user: state.auth.login.userRole\n  }\n}\n\nclass AddAllergy extends React.Component {\n\n  toggleModal = () => {\n    this.setState(prevState => ({\n      modal: !prevState.modal\n    }))\n  }\n  state = {\n    fname:'',\n    doctype:'',\n    fileuploads:'',\n    curTime : new Date().toLocaleString()\n  }\n\n  onChangeHandler=event=>{\n\n    //console.log(event.target.files[0])\n    this.setState({\n      fileuploads: event.target.files[0],\n      loaded: 0,\n    })\n\n}\n\n \n  handleSubmit = e => {\n    e.preventDefault() \n  \n    console.log(\"Status \" + this.state.doctype);\n \n  \n    let postData=\"issueNo=\"+localStorage.getItem(\"issueNo\")\n    postData+=\"&token=dfjkhsdfaksjfh3756237\";\n    postData+=\"&comments=\"+this.state.fname;\n    postData+=\"&status=\"+this.state.doctype;\n    console.log(postData);\n    let _targetPostURL=\"http://159.65.148.197:3001/api/issues/issuesUpdate?=\";\n    axios(\n      {\n        method: 'post',\n        url: _targetPostURL,\n        data: postData,\n        headers: {'Content-Type': 'application/x-www-form-urlencoded' }\n        }\n\n    ).then(res=>{\n\n      console.log(\"In Good way:\");\n      console.log(res.data);\n      if(res.data.status===1){\n        alert('Issues Status Updated Successfully')\n        window.location='../../views/dashboard/issuelistall'\n      }\n    })\n    .catch(e=>{\n      \n      console.log(\"Exception:\"); \n      console.log(e);\n    });\n  \n   \n\n  }\n    \n  render() {\n  \n    const documentType = [\n      { value: \"Select Status\", label: \"Select Status\", color: \"#00B8D9\", isFixed: true },\n      { value: \"1\", label: \"Assigned\", color: \"#00B8D9\", isFixed: true },\n      { value: \"2\", label: \"Resolved\", color: \"#00B8D9\", isFixed: true },\n      { value: \"3\", label: \"Closed\", color: \"#00B8D9\", isFixed: true }   \n     \n    ]\n          \n    return (\n     \n        <React.Fragment >\n         <hr></hr>       \n          \n        <Form action=\"/\" enctype=\"multipart/form-data\" onSubmit={this.handleSubmit}>\n            <Row>\n            <Col sm=\"12\">\n                <FormGroup>\n                  <Label for=\"nameVertical\">Select Status</Label>\n                  <Select                 \n                  name=\"colors\"\n                  options={documentType}\n                  className=\"React\"\n                  classNamePrefix=\"select\"               \n                  onChange={e => this.setState({ doctype: e.value })}\n                  required\n              />\n                </FormGroup>\n              </Col>\n              </Row>\n              <Row>\n              <Col sm=\"12\">\n                <FormGroup>\n                  <Label for=\"nameVertical\">Comments</Label>\n                  <Input\n                    type=\"textarea\"                    \n                    name=\"fname\"\n                    id=\"nameVertical\"\n                    placeholder=\"Comments\"\n                    value={this.state.fname}\n                    onChange={e => this.setState({ fname: e.target.value })}\n                    required\n                  />\n                </FormGroup>\n              </Col>\n              </Row>\n          \n              <Row>        \n                    \n                        \n              <Col sm=\"12\">\n                <FormGroup>\n                  <Button.Ripple\n                    color=\"primary\"\n                    type=\"submit\"\n                    className=\"mr-1 mb-1\"\n                  \n                  >\n                    Submit\n                  </Button.Ripple>\n                  <Button.Ripple\n                    outline\n                    color=\"warning\"\n                    type=\"reset\"\n                    className=\"mb-1\"\n                  >\n                    Reset\n                  </Button.Ripple>\n                </FormGroup>\n              </Col>\n            </Row>\n          </Form>\n       \n\n     \n   \n      </React.Fragment>\n    )\n  }\n}\n\nexport default AddAllergy\n"],"sourceRoot":""}